<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_BL_ApplicationDeviation'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='UniqueInstanceNameVH'>
  <value>fn_BL_ApplicationDeviation1</value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_BL_ApplicationDeviation</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("");
print("++++> Entering function :: fn_BL_Deviations");

aBlazeApplication is some BlazeApplication initially BTCommonVar.termInput.blazeApplication as a BlazeApplication;
try{
if(aBlazeApplication.businessErrorsFlag = false) then {

  print("----> aBlazeApplication.deviationsCheck :: " aBlazeApplication.deviationsCheck);

  if(aBlazeApplication.deviationsCheck is equal to true) then {
    if(message.request.application.loanBasicDetail.leadId is unknown or message.request.application.loanBasicDetail.leadId =(ignoring case)"Amber")then{
       BL_ApplicationDeviations_R(message);
    }else{
      BL_ApplicationDeviations(message);
    }
     
    for  each  BlazeApplicant  in  BTCommonVar.termInput.blazeApplication.blazeApplicantArray
    do {
      aBlazeApplicant  is  some  BlazeApplicant  initially  it  as  a  BlazeApplicant;
      if(message.request.application.loanBasicDetail.leadId is unknown or message.request.application.loanBasicDetail.leadId =(ignoring case)"Amber")then{
        BL_ApplicantDeviations_R(aBlazeApplicant,message);
      }
      else{
        BL_ApplicantDeviations(aBlazeApplicant,message);
      }
    }
  }
}
  print("++++> Exiting function :: fn_BL_Deviations");
  print("");

}catch an Exception with {
  aBlazeApplication.fn_BL_ApplicationDeviationException = true;  
  print("\n***Exception :: \n>>@@@<<\n" evaluationException().toString()"\n>>@@@<<\n");  
}
]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='6QvfXg'>
    <instance ref='ParameterNameVH'>
     <value>message</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>Message</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>