<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_BL_DefaultValues'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='UniqueInstanceNameVH'>
  <value>fn_BL_DefaultValues1</value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_BL_DefaultValues</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("");
print("++++> Entering function :: fn_BL_DefaultValues");

aBlazeApplication is some BlazeApplication initially BTCommonVar.termInput.blazeApplication as a BlazeApplication;

productCode is a string;
productCode = message.invocation.decisionService;

try {
    
  if(aBlazeApplication.businessErrorsFlag = false) then {
    print("");

    print("");
    //------------------------------------ aBlazeApplicant's initial values start ----------------------------------------------
    for each BlazeApplicant in BTCommonVar.termInput.blazeApplication.blazeApplicantArray
    do {
      aBlazeApplicant is some BlazeApplicant initially it as a BlazeApplicant;
	  
      //Initialising Cibil Score
      print("---->cibil.score ::"aBlazeApplicant.applicantAdditionalDetails.cibil.score);
      if(aBlazeApplicant.applicantAdditionalDetails.cibil.score ="000-1")then{
         aBlazeApplicant.applicantAdditionalDetails.cibil.score ="-1";
      }
      print("---->cibil.score ::"aBlazeApplicant.applicantAdditionalDetails.cibil.score);
      
      if(aBlazeApplicant.customerCategory =(ignoring case)"RETAIL" and  aBlazeApplicant.creditBureauReports[0].CreditReport.ScoreSegment[0].Score ="000-1")then{
     	 aBlazeApplicant.creditBureauReports[0].CreditReport.ScoreSegment[0].Score ="-1";
     	 print("aBlazeApplicant.ScoreSegment.Score ::"aBlazeApplicant.creditBureauReports[0].CreditReport.ScoreSegment[0].Score);
      }
      
      // noOfSecAccounts
      aBlazeApplicant.noOfSecAccounts = 0;
      
      // bureauScore
      aBlazeApplicant.bureauScore  =  0;
      
      // used in salaried Experian Scorecard
      aBlazeApplicant.maxMOBSecured = 0;
      aBlazeApplicant.maxMOBonSecInYears = 0;

      //  isNtc used in Thin Segment Experian Scorecard
      aBlazeApplicant.isNtc  =  false;        

      // used in all Bureau Rules
      aBlazeApplicant.isCcSettledRemarkAbove30K  =  false;   

      // cc account variables used in bureau deviations
      aBlazeApplicant.isCcAccWoffSettOverdueAb30kBynd24M  =  false;
      aBlazeApplicant.isCcAccWoffSettOverdueAb0InL24M  =  false;
      aBlazeApplicant.isCcAccOverdueAb30kInL24M  =  false;

      // non-cc account variables used in bureau deviations
      aBlazeApplicant.isNonCcAccWoffSettDpdAb90everInL24M  =  false;

      // dpd variables
      aBlazeApplicant.isCcAccDpdEqualOrAbove30InL24M  =  false;
      aBlazeApplicant.isNonCcAccDpdBelow30InL24M  =  false;
      aBlazeApplicant.isCcAccDpdEqualOrAbove30Bynd24M  =  false;
      aBlazeApplicant.isNonCcAccDpdEqualOrAbove30Bynd24M  =  false;

      // cc-account total overdue of all account
      aBlazeApplicant.isCcSettledRemarkTotalAbove30K = false;

      // used in all Salaried Experian Scorecard
      aBlazeApplicant.nbr_HL_le25L_tot_accts=0;
      aBlazeApplicant.nbr_HL_gt25L_tot_accts=0;
      aBlazeApplicant.nbr_PL_tot_accts=0;
      aBlazeApplicant.nbr_CL_le25_tot_accts=0;
      aBlazeApplicant.nbr_CL_gt25_tot_accts=0;

      aBlazeApplicant.nbr_TW_tot_accts=0;
      aBlazeApplicant.nbr_AL_tot_accts=0;
      aBlazeApplicant.nbr_CC_le1L_tot_accts=0;
      aBlazeApplicant.nbr_CC_gt1L_tot_accts=0;    

      aBlazeApplicant.twNoOfAccCountInL36M=0;
      aBlazeApplicant.glNoOfAccCountInL36M=0;
      aBlazeApplicant.clNoOfAccCountInL36M=0;
      aBlazeApplicant.stplNoOfAccCountInL36M=0;  
      aBlazeApplicant.plNoOfAccCountInL36M=0;

      aBlazeApplicant.alNoOfAccCountInL36M=0;
      aBlazeApplicant.lapNoOfAccCountInL36M=0;
      aBlazeApplicant.ccNoOfAccCountInL36M=0;  
      aBlazeApplicant.hlNoOfAccCountInL36M=0;   
      aBlazeApplicant.othersNoOfAccCountInL36M=0;  

      aBlazeApplicant.hlMaxMonthsInL36M=0;  
      aBlazeApplicant.secureMinMonthsInL36M=100000;
      aBlazeApplicant.noOfAccWithDPDAbove0InL36M=0;
      aBlazeApplicant.noOfAccInL36M=0;

      aBlazeApplicant.noOfDpdInL6m=0;      
      aBlazeApplicant.noOfEnqInL6m=0;

      aBlazeApplicant.noOfAccOpenedInL12m=0;
      aBlazeApplicant.noOfDpdEqualOrAbove30CountInL12M=0;
      aBlazeApplicant.maxDpdValueInL12m=0;
      aBlazeApplicant.hlMaxDpdValueInL12m=-1;  

      aBlazeApplicant.noOfUnSecureAccOpenedInL24m=0;

      aBlazeApplicant.max_dpd_all=0;
      aBlazeApplicant.max_dpd_sec=0;  

      aBlazeApplicant.currAvgUtilizationOnAllAcc=0;
      aBlazeApplicant.currUtilizationOnLiveCC=0;
      aBlazeApplicant.currUtilizationOnLiveRegUnSecAcc=0;
      aBlazeApplicant.percentageOfDelqAcc = 0;

      aBlazeApplicant.noOfLiveAcc =  0;
      aBlazeApplicant.noOfLiveCC =  0;
      aBlazeApplicant.noOfLiveRegUnSecAcc =  0;

//----------------------------------------------------BL Deviation Flags begins------------------------------------------------------------------
      aBlazeApplicant.isSuitFiled  =  false;
      aBlazeApplicant.isWriteOffOrSettled  =  false;

      aBlazeApplicant.derogatoryRemarksInL12m = 0;  
	  aBlazeApplicant.applicationDeviation_BIL_B7Flag =false;
	  aBlazeApplicant.applicationDeviation_BIL_B8Flag =false;
	  aBlazeApplicant.applicationDeviation_BIL_B9Flag =false;
	
	  aBlazeApplicant.isDpdAb90everInL36M=false;
	  aBlazeApplicant.isDpdAb60everInL12M=false;
	  aBlazeApplicant.isDpdAb30everInL12M=false;
	  aBlazeApplicant.isDpdAb30everInL6M=false;
	
	  aBlazeApplicant.isNonCcAccWoffSettOverdueAb10kL36M =false;
	  aBlazeApplicant.isNonCcAccWoffSettOverdueAb5kL60M =false;	
      
      //Variable Used for Deviation
      aBlazeApplicant.noOfUnsecuredEnqInL6m =0;
      aBlazeApplicant.noOfUnsecuredEnqInL3m =0;
//----------------------------------------------------BL Deviation Flags ends------------------------------------------------------------------
 
    } 
    //------------------------------------ aBlazeApplicant's initial values end ----------------------------------------------
    
  }
  
  print("++++> Exiting function :: fn_BL_DefaultValues");
  print("");
    
} catch an Exception with {
  aBlazeApplication.fn_BL_DefaultValuesException = true;  
  print("\n***Exception :: \n>>@@@<<\n" evaluationException().toString()"\n>>@@@<<\n");  
}]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='BSgcnZ'>
    <instance ref='ParameterNameVH'>
     <value>message</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>Message</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>